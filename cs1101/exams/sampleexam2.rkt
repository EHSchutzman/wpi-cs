#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 62 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
39 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
41 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1           0 752 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 171
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname exam) (re"
 #"ad-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructo"
 #"r repeating-decimal #f #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 17 3 12 #";; problem 1"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 17 3 21 #";; medals is a struct"
0 0 53 29 1 #"\n"
0 0 17 3 37 #";; (make-medals number number number)"
0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 54 3 1 #" "
0 0 14 3 6 #"medals"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"gold"
0 0 54 3 1 #" "
0 0 14 3 6 #"silver"
0 0 54 3 1 #" "
0 0 14 3 6 #"bronze"
0 0 22 3 2 #"))"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 17 3 22 #";; athlete ia a struct"
0 0 53 29 1 #"\n"
0 0 17 3 52 #";; (make-athlete string number string string medals)"
0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 54 3 1 #" "
0 0 14 3 7 #"athlete"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"name"
0 0 54 3 1 #" "
0 0 14 3 3 #"age"
0 0 54 3 1 #" "
0 0 14 3 6 #"gender"
0 0 54 3 1 #" "
0 0 14 3 7 #"country"
0 0 54 3 1 #" "
0 0 14 3 6 #"medals"
0 0 22 3 2 #"))"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 17 3 29 #";; list-of-athletes is one of"
0 0 53 29 1 #"\n"
0 0 17 3 8 #";; empty"
0 0 53 29 1 #"\n"
0 0 17 3 34 #";; (cons athlete list-of-athletes)"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 17 3 12 #";; problem 2"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 17 3 47 #";; all-gold: list-of-athlete -> list-of-athlete"
0 0 53 29 1 #"\n"
0 0 17 3 64
#";; consumes a list of athletes and produces a list of only those"
0 0 53 29 1 #"\n"
0 0 17 3 77
(
 #";; athletes who have earned at least one medal and for whom all meda"
 #"ls earned"
) 0 0 53 29 1 #"\n"
0 0 17 3 18 #";; are gold medals"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"all-gold"
0 0 54 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 55 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 55 29 1 #"\n"
0 0 55 3 7 #"       "
0 0 22 3 2 #"[("
0 0 14 3 5 #"cons?"
0 0 55 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 3 #"and"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #">"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"medals-gold"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"athlete-medals"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 55 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 22 3 3 #")))"
0 0 55 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 55 29 1 #"\n"
0 0 55 3 32 #"                                "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 55 3 1 #" "
0 0 14 3 1 #"="
0 0 55 3 1 #" "
0 0 20 3 1 #"0"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"medals-silver"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"athlete-medals"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 55 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 22 3 4 #"))))"
0 0 55 29 1 #"\n"
0 0 55 3 37 #"                                     "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 55 3 1 #" "
0 0 20 3 1 #"0"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"medals-bronze"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"athlete-medals"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 55 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 22 3 6 #"))))))"
0 0 55 29 1 #"\n"
0 0 55 3 27 #"                           "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 55 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"all-gold"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 55 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 22 3 4 #")))]"
0 0 55 29 1 #"\n"
0 0 55 3 26 #"                          "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"all-gold"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 55 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 22 3 7 #"))])]))"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 17 3 11 #";;problem 3"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 17 3 5 #";; a)"
0 0 53 29 1 #"\n"
0 0 17 3 21 #";; flight is a struct"
0 0 53 29 1 #"\n"
0 0 17 3 38 #";; (make-flight string list-of-flight)"
0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 54 3 1 #" "
0 0 14 3 6 #"flight"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"city"
0 0 54 3 1 #" "
0 0 14 3 14 #"list-of-flight"
0 0 22 3 2 #"))"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 17 3 28 #";; list-of-flight is one of "
0 0 53 29 1 #"\n"
0 0 17 3 8 #";; empty"
0 0 53 29 1 #"\n"
0 0 17 3 31 #";; (cons flight list-of-flight)"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 53 3 1 #" "
0 0 14 3 11 #"FROM-BOSTON"
0 0 53 29 1 #"\n"
0 0 53 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-flight"
0 0 54 3 1 #" "
0 0 19 3 8 #"\"Boston\""
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 54 29 1 #"\n"
0 0 54 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-flight"
0 0 54 3 1 #" "
0 0 19 3 10 #"\"New York\""
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 54 29 1 #"\n"
0 0 54 3 50 #"                                                  "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-flight"
0 0 54 3 1 #" "
0 0 19 3 9 #"\"Atlanta\""
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 54 3 1 #" "
0 0 54 29 1 #"\n"
0 0 54 3 74
(
 #"                                                                    "
 #"      "
) 0 0 22 3 1 #"("
0 0 14 3 11 #"make-flight"
0 0 54 3 1 #" "
0 0 19 3 9 #"\"Detroit\""
0 0 54 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-flight"
0 0 54 3 1 #" "
0 0 19 3 13 #"\"Minneapolis\""
0 0 54 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-flight"
0 0 54 3 1 #" "
0 0 19 3 9 #"\"Phoenix\""
0 0 54 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #")))"
0 0 54 29 1 #"\n"
0 0 54 3 50 #"                                                  "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-flight"
0 0 54 3 1 #" "
0 0 19 3 8 #"\"Dallas\""
0 0 54 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #")))"
0 0 54 29 1 #"\n"
0 0 54 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-flight"
0 0 54 3 1 #" "
0 0 19 3 11 #"\"Baltimore\""
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-flight"
0 0 54 3 1 #" "
0 0 19 3 7 #"\"Miami\""
0 0 54 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 6 #"))))))"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 17 3 5 #";; b)"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 17 3 43 #";; flight-exists?: flight string -> boolean"
0 0 53 29 1 #"\n"
0 0 17 3 76
(
 #";; consumes a flight and the name of a destination city and produces"
 #" true if"
) 0 0 53 29 1 #"\n"
0 0 17 3 66
#";; there exists a way to fly from the departure point of the given"
0 0 53 29 1 #"\n"
0 0 17 3 34 #";; flight to the given destination"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"flight-exists?"
0 0 54 3 1 #" "
0 0 14 3 8 #"a-flight"
0 0 54 3 1 #" "
0 0 14 3 11 #"destination"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 54 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 8 #"string=?"
0 0 54 3 1 #" "
0 0 14 3 11 #"destination"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"flight-city"
0 0 54 3 1 #" "
0 0 14 3 8 #"a-flight"
0 0 22 3 2 #"))"
0 0 54 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 54 29 1 #"\n"
0 0 54 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"city-enroute?"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 21 #"flight-list-of-flight"
0 0 54 3 1 #" "
0 0 14 3 8 #"a-flight"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 14 3 11 #"destination"
0 0 22 3 4 #")]))"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"city-enroute?"
0 0 54 3 1 #" "
0 0 14 3 4 #"alof"
0 0 54 3 1 #" "
0 0 14 3 11 #"destination"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 54 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 54 3 1 #" "
0 0 14 3 4 #"alof"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 54 29 1 #"\n"
0 0 54 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 5 #"cons?"
0 0 54 3 1 #" "
0 0 14 3 4 #"alof"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"flight-exists?"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 54 3 1 #" "
0 0 14 3 4 #"alof"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 14 3 11 #"destination"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 13 #"city-enroute?"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 54 3 1 #" "
0 0 14 3 4 #"alof"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 14 3 11 #"destination"
0 0 22 3 5 #"))]))"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 17 3 13 #";; test cases"
0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"flight-exists?"
0 0 54 3 1 #" "
0 0 14 3 11 #"FROM-BOSTON"
0 0 54 3 1 #" "
0 0 19 3 13 #"\"Los Angeles\""
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"flight-exists?"
0 0 54 3 1 #" "
0 0 14 3 11 #"FROM-BOSTON"
0 0 54 3 1 #" "
0 0 19 3 8 #"\"Dallas\""
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"flight-exists?"
0 0 54 3 1 #" "
0 0 14 3 11 #"FROM-BOSTON"
0 0 54 3 1 #" "
0 0 19 3 8 #"\"Boston\""
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 17 3 22 #";; an info is a struct"
0 0 53 29 1 #"\n"
0 0 17 3 28 #";; (make-info string string)"
0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 54 3 1 #" "
0 0 14 3 4 #"info"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"name"
0 0 54 3 1 #" "
0 0 14 3 5 #"color"
0 0 22 3 2 #"))"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 17 3 32 #";; a gtree (grok tree) is either"
0 0 53 29 1 #"\n"
0 0 17 3 10 #";; \342\200\231stop"
0 0 53 29 1 #"\n"
0 0 17 3 66
(
 #";; (where \342\200\231stop is used to indicate a grok has no offspri"
 #"ng), or"
) 0 0 53 29 1 #"\n"
0 0 17 3 31 #";; (make-grok info gtree gtree)"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 54 3 1 #" "
0 0 14 3 4 #"grok"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"data"
0 0 54 3 1 #" "
0 0 14 3 5 #"baby1"
0 0 54 3 1 #" "
0 0 14 3 5 #"baby2"
0 0 22 3 2 #"))"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 53 3 1 #" "
0 0 14 3 5 #"Henry"
0 0 53 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-grok"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-info"
0 0 54 3 1 #" "
0 0 19 3 7 #"\"Henry\""
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-grok"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-info"
0 0 54 3 1 #" "
0 0 19 3 5 #"\"Dan\""
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"stop"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"stop"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 25 #"                         "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-grok"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-info"
0 0 54 3 1 #" "
0 0 19 3 5 #"\"Don\""
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"stop"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"stop"
0 0 22 3 3 #")))"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 7         769 53           0 0           0 127 0 17 3 20
#";; template for info"
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"info-fcn"
0 0 2 3 1 #" "
0 0 14 3 6 #"a-info"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 9 #"info-name"
0 0 2 3 1 #" "
0 0 14 3 6 #"a-info"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 10 #"info-color"
0 0 2 3 1 #" "
0 0 14 3 6 #"a-info"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 17 3 20 #";; template for grok"
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"grok-fcn"
0 0 2 3 1 #" "
0 0 14 3 6 #"a-grok"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 8 #"info-fcn"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"grok-data"
0 0 2 3 1 #" "
0 0 14 3 6 #"a-grok"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 8 #"grok-fcn"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"grok-baby1"
0 0 2 3 1 #" "
0 0 14 3 6 #"a-grok"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 8 #"grok-fcn"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"grok-baby2"
0 0 2 3 1 #" "
0 0 14 3 6 #"a-grok"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 17 3 21 #";; template for gtree"
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"gtree-fcn"
0 0 2 3 1 #" "
0 0 14 3 7 #"a-gtree"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 2 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 7 #"symbol?"
0 0 2 3 1 #" "
0 0 14 3 7 #"a-gtree"
0 0 22 3 1 #")"
0 0 2 3 3 #"   "
0 0 22 3 1 #"]"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 5 #"grok?"
0 0 2 3 1 #" "
0 0 14 3 7 #"a-gtree"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"grok-fcn"
0 0 2 3 1 #" "
0 0 14 3 7 #"a-gtree"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 4 #")]))"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"contracts"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 7 #"purpose"
0           0 0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 17 3 30 #";; count-blue: gtree -> number"
0 0 53 29 1 #"\n"
0 0 17 3 69
(
 #";; consumes a gtree and produces the number of blue groks in the tre"
 #"e"
) 0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"count-blue"
0 0 54 3 1 #" "
0 0 14 3 7 #"a-gtree"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 54 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 7 #"symbol?"
0 0 54 3 1 #" "
0 0 14 3 7 #"a-gtree"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #"]"
0 0 54 29 1 #"\n"
0 0 54 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 5 #"grok?"
0 0 54 3 1 #" "
0 0 14 3 7 #"a-gtree"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"counter"
0 0 54 3 1 #" "
0 0 14 3 7 #"a-gtree"
0 0 22 3 4 #")]))"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"counter"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-grok"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 54 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 7 #"symbol?"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-grok"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #"]"
0 0 54 29 1 #"\n"
0 0 54 3 8 #"        "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 54 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 5 #"blue?"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"grok-data"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-grok"
0 0 22 3 2 #"))"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 54 3 1 #" "
0 0 20 3 1 #"1"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"counter"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"grok-baby1"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-grok"
0 0 22 3 2 #"))"
0 0 54 29 1 #"\n"
0 0 54 3 51 #"                                                   "
0 0 22 3 1 #"("
0 0 14 3 7 #"counter"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"grok-baby2"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-grok"
0 0 22 3 4 #")))]"
0 0 54 29 1 #"\n"
0 0 54 3 20 #"                    "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 54 3 1 #" "
0 0 54 29 1 #"\n"
0 0 54 3 21 #"                     "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"counter"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"grok-baby1"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-grok"
0 0 22 3 2 #"))"
0 0 54 29 1 #"\n"
0 0 54 3 24 #"                        "
0 0 22 3 1 #"("
0 0 14 3 7 #"counter"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"grok-baby2"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-grok"
0 0 22 3 8 #")))])]))"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"blue?"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-info"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 8 #"symbol=?"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"info-color"
0 0 54 3 1 #" "
0 0 14 3 6 #"a-info"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #"))"
0 0 53 29 1 #"\n"
0 0 53 29 1 #"\n"
0 0 17 3 7 #";; test"
0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"count-blue"
0 0 54 3 1 #" "
0 0 14 3 5 #"Henry"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 53 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"count-blue"
0 0 54 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"stop"
0 0 22 3 1 #")"
0 0 54 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 53 29 1 #"\n"
0 0 4 29 1 #"\n"
0           0
