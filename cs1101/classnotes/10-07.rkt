#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 59 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
39 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
41 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 392 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 172
(
 #"#reader(lib \"htdp-advanced-reader.ss\" \"lang\")((modname 10-07) (r"
 #"ead-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t construct"
 #"or repeating-decimal #t #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 17 3 80
(
 #";; NEW EXAMPLE - state variables, set!, begin, local, maybe error to"
 #"o. IMPORTANT"
) 0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 33 #";; model a simple vending machine"
0 0 54 29 1 #"\n"
0 0 17 3 50 #";; candy and soda, put coins in and dispense items"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 18 #";; vending machine"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 12 #";; constants"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 14 3 9 #"soda-cost"
0 0 54 3 1 #" "
0 0 20 3 2 #"50"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 14 3 10 #"candy-cost"
0 0 54 3 1 #" "
0 0 20 3 2 #"65"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 17 #";; state-variable"
0 0 54 29 1 #"\n"
0 0 17 3 14 #";; amt: number"
0 0 54 29 1 #"\n"
0 0 17 3 64
#";; represents the current amount of cents in the vending machine"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 14 3 3 #"amt"
0 0 54 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 30 #";; insert-coin: number -> void"
0 0 54 29 1 #"\n"
0 0 17 3 56 #";; adds the given number of cents to the vending machine"
0 0 54 29 1 #"\n"
0 0 17 3 22 #";; EFFECT: changes amt"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"insert-coin"
0 0 57 3 1 #" "
0 0 14 3 5 #"cents"
0 0 22 3 1 #")"
0 0 57 29 1 #"\n"
0 0 57 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 4 #"set!"
0 0 58 3 1 #" "
0 0 14 3 3 #"amt"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 58 3 1 #" "
0 0 14 3 3 #"amt"
0 0 58 3 1 #" "
0 0 14 3 5 #"cents"
0 0 22 3 3 #")))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 32 #";; choose-item: symbol -> string"
0 0 54 29 1 #"\n"
0 0 17 3 65
#";; consumes the item the user wants and produces a status message"
0 0 54 29 1 #"\n"
0 0 17 3 22 #";; EFFECT: changes amt"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"choose-item"
0 0 57 3 1 #" "
0 0 14 3 4 #"item"
0 0 22 3 1 #")"
0 0 57 29 1 #"\n"
0 0 57 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 58 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 8 #"symbol=?"
0 0 58 3 1 #" "
0 0 14 3 4 #"item"
0 0 58 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"soda"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 9 #"         "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 58 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 2 #">="
0 0 58 3 1 #" "
0 0 14 3 3 #"amt"
0 0 58 3 1 #" "
0 0 14 3 9 #"soda-cost"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 58 29 1 #"\n"
0 0 58 3 16 #"                "
0 0 22 3 1 #"("
0 0 15 3 5 #"local"
0 0 58 3 1 #" "
0 0 22 3 2 #"[("
0 0 15 3 6 #"define"
0 0 58 3 1 #" "
0 0 14 3 6 #"change"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 58 3 1 #" "
0 0 14 3 3 #"amt"
0 0 58 3 1 #" "
0 0 14 3 9 #"soda-cost"
0 0 22 3 3 #"))]"
0 0 58 3 1 #" "
0 0 17 3 47 #";; defined a constant named change within local"
0 0 58 29 1 #"\n"
0 0 58 3 18 #"                  "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 58 29 1 #"\n"
0 0 58 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 4 #"set!"
0 0 58 3 1 #" "
0 0 14 3 3 #"amt"
0 0 58 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 20 #"                    "
0 0 22 3 1 #"("
0 0 14 3 6 #"format"
0 0 58 3 1 #" "
0 0 19 3 31 #"\"give soda and ~a cents change\""
0 0 58 3 1 #" "
0 0 14 3 6 #"change"
0 0 22 3 4 #")))]"
0 0 58 29 1 #"\n"
0 0 58 3 15 #"               "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"format"
0 0 58 3 1 #" "
0 0 19 3 20 #"\"need ~a more cents\""
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 58 3 1 #" "
0 0 14 3 9 #"soda-cost"
0 0 58 3 1 #" "
0 0 14 3 3 #"amt"
0 0 22 3 5 #"))])]"
0 0 58 29 1 #"\n"
0 0 58 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 8 #"symbol=?"
0 0 58 3 1 #" "
0 0 14 3 4 #"item"
0 0 58 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"candy"
0 0 22 3 1 #")"
0 0 58 29 1 #"\n"
0 0 58 3 9 #"         "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 58 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 2 #">="
0 0 58 3 1 #" "
0 0 14 3 3 #"amt"
0 0 58 3 1 #" "
0 0 14 3 10 #"candy-cost"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 19 3 12 #"\"give candy\""
0 0 22 3 1 #"]"
0 0 58 29 1 #"\n"
0 0 58 3 15 #"               "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 58 3 1 #" "
0 0 19 3 17 #"\"need more money\""
0 0 22 3 5 #"])]))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 7         589 54           0 0           0 97 0 14 3 7 #"format:"
0 0 2 3 1 #" "
0 0 14 3 5 #"takes"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 6 #"string"
0 0 2 3 1 #" "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 14 3 4 #"some"
0 0 2 3 1 #" "
0 0 14 3 6 #"number"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 5 #"holes"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"same"
0 0 2 3 1 #" "
0 0 14 3 6 #"number"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 11 #"expressions"
0 0 2 3 1 #" "
0 0 14 3 5 #"after"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"string."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 4 #"each"
0 0 2 3 1 #" "
0 0 14 3 4 #"hole"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 6 #"string"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 11 #"represented"
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 3 1 #" "
0 0 14 3 2 #"~a"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 6 #"format"
0 0 2 3 1 #" "
0 0 14 3 1 #"-"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 20 3 1 #"3"
0 0 2 3 1 #" "
0 0 14 3 2 #"~a"
0 0 20 3 1 #"'"
0 0 14 3 1 #"s"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 17 3 1 #" "
0 0 14 3 6 #"follow"
0 0 17 3 1 #" "
0 0 14 3 2 #"it"
0 0 17 3 1 #" "
0 0 14 3 4 #"with"
0 0 17 3 1 #" "
0 0 14 3 5 #"three"
0 0 17 3 1 #" "
0 0 14 3 12 #"expressions."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 4 #"EACH"
0 0 2 3 1 #" "
0 0 14 3 4 #"hole"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"~a"
0 0 2 3 1 #" "
0 0 14 3 5 #"only."
0 0 2 3 1 #" "
0 0 14 3 3 #"Not"
0 0 2 3 1 #" "
0 0 14 3 5 #"other"
0 0 2 3 1 #" "
0 0 14 3 10 #"alphabets."
0           0 0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 7         619 54           0 0           0 102 0 15 3 5 #"begin"
0 0 2 3 1 #" "
0 0 14 3 1 #"-"
0 0 2 3 1 #" "
0 0 14 3 4 #"some"
0 0 2 3 1 #" "
0 0 14 3 6 #"number"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 4 #"void"
0 0 2 3 1 #" "
0 0 14 3 11 #"expressions"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 8 #"followed"
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 10 #"expression"
0 0 2 3 1 #" "
0 0 14 3 5 #"whose"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"we"
0 0 2 3 1 #" "
0 0 14 3 4 #"care"
0 0 2 3 1 #" "
0 0 14 3 5 #"about"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 14 3 4 #"want"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 8 #"display."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 5 #"gives"
0 0 2 3 1 #" "
0 0 14 3 3 #"you"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"LAST"
0 0 2 3 1 #" "
0 0 14 3 10 #"expression"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"EVEN"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"void"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 15 3 5 #"begin"
0 0 2 3 1 #" "
0 0 14 3 10 #"calculates"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"ALL"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 11 #"expressions"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"but"
0 0 2 3 1 #" "
0 0 14 3 4 #"also"
0 0 2 3 1 #" "
0 0 14 3 8 #"discards"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 6 #"except"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"last"
0 0 2 3 1 #" "
0 0 14 3 4 #"one."
0           0 0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 75
(
 #";; IMPORTANT - as soon as you use set!, you MUST put in an EFFECT st"
 #"atement"
) 0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 18 #";; an account is a"
0 0 54 29 1 #"\n"
0 0 17 3 31 #";; (make-account number number)"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 57 3 1 #" "
0 0 14 3 7 #"account"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"acctnum"
0 0 57 3 1 #" "
0 0 14 3 7 #"balance"
0 0 22 3 2 #"))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 30 #";; a list-of-account is one of"
0 0 54 29 1 #"\n"
0 0 17 3 9 #";;  empty"
0 0 54 29 1 #"\n"
0 0 17 3 34 #";;  (cons account list-of-account)"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 28 #";; Citibank: list-of-account"
0 0 54 29 1 #"\n"
0 0 17 3 49 #";; remembers the info about all the bank accounts"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 54 3 1 #" "
0 0 14 3 8 #"Citibank"
0 0 54 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-account"
0 0 57 3 1 #" "
0 0 20 3 1 #"1"
0 0 57 3 1 #" "
0 0 20 3 3 #"500"
0 0 22 3 1 #")"
0 0 57 29 1 #"\n"
0 0 57 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-account"
0 0 57 3 1 #" "
0 0 20 3 1 #"2"
0 0 57 3 1 #" "
0 0 20 3 4 #"1000"
0 0 22 3 1 #")"
0 0 57 29 1 #"\n"
0 0 57 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-account"
0 0 57 3 1 #" "
0 0 20 3 1 #"3"
0 0 57 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 3 #")))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 7         535 54           0 0           0 88 0 17 3 33
#";; deposit: number number -> void"
0 0 2 29 1 #"\n"
0 0 17 3 58
#";; deposits the given amount of money in the given account"
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"deposit"
0 0 2 3 1 #" "
0 0 14 3 7 #"acctnum"
0 0 2 3 1 #" "
0 0 14 3 3 #"amt"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 4 #"set!"
0 0 2 3 1 #" "
0 0 14 3 8 #"Citibank"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"deposit-into"
0 0 2 3 1 #" "
0 0 14 3 7 #"acctnum"
0 0 2 3 1 #" "
0 0 14 3 3 #"amt"
0 0 2 3 1 #" "
0 0 14 3 8 #"Citibank"
0 0 22 3 3 #")))"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 17 3 65
#";; deposit-into: number number list-of-account -> list-of-account"
0 0 2 29 1 #"\n"
0 0 17 3 56 #";; consumes account number, amount of money, and list of"
0 0 2 29 1 #"\n"
0 0 17 3 56 #";; accounts and produces list with given amount added to"
0 0 2 29 1 #"\n"
0 0 17 3 16 #";; named account"
0 0 2 29 1 #"\n"
0 0 17 3 85
(
 #";; This function rebuilds the ENTIRE list. Awful lot of work! Easier"
 #" way to do this!!"
) 0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 17 3 18 #";; an account is a"
0 0 2 29 1 #"\n"
0 0 17 3 31 #";; (make-account number number)"
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 2 3 1 #" "
0 0 14 3 7 #"account"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"acctnum"
0 0 2 3 1 #" "
0 0 14 3 7 #"balance"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 17 3 107
(
 #";; we get constructors(make-account), selectors(account-acctnum; acc"
 #"ount-balance) and recognizer (account?)"
) 0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 17 3 32 #";; we get other functions too!!]"
0 0 2 29 1 #"\n"
0 0 17 3 71
(
 #";; MUTATORS: - since they change or mutate the components of the str"
 #"uct"
) 0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 17 3 47 #";; set-account-acctnum!: account number -> void"
0 0 2 29 1 #"\n"
0 0 17 3 44 #";; change the value of the acctnum component"
0 0 2 29 1 #"\n"
0 0 17 3 43 #";; in the given account to the given number"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 17 3 47 #";; set-account-balance!: account number -> void"
0 0 2 29 1 #"\n"
0 0 17 3 44 #";; change the value of the balance component"
0 0 2 29 1 #"\n"
0 0 17 3 43 #";; in the given account to the given number"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 17 3 51 #";; bang means that we are going to change something"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 17 3 47 #";; generically calls mutators as set-structure!"
0 0 2 29 1 #"\n"
0 0 17 3 95
(
 #";; set-structure! consumes the struct and the data type of the compo"
 #"nent that we want to change"
) 0           0 0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 49 #";; deposit2: number number list-of-number -> void"
0 0 54 29 1 #"\n"
0 0 17 3 80
(
 #";; deposits the additional amount into the account with the given ac"
 #"count number"
) 0 0 54 29 1 #"\n"
0 0 17 3 44 #";; EFFECT: changes the balance in an account"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"deposit2"
0 0 57 3 1 #" "
0 0 14 3 7 #"acctnum"
0 0 57 3 1 #" "
0 0 14 3 3 #"amt"
0 0 57 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 22 3 1 #")"
0 0 57 29 1 #"\n"
0 0 57 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 57 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 57 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 22 3 1 #")"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"error"
0 0 58 3 1 #" "
0 0 19 3 17 #"\"no such account\""
0 0 22 3 2 #")]"
0 0 57 29 1 #"\n"
0 0 57 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 5 #"cons?"
0 0 57 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 22 3 1 #")"
0 0 57 29 1 #"\n"
0 0 57 3 9 #"         "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 57 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 1 #"="
0 0 57 3 1 #" "
0 0 14 3 7 #"acctnum"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"account-acctnum"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 57 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 22 3 3 #")))"
0 0 57 29 1 #"\n"
0 0 57 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 20 #"set-account-balance!"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 57 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 22 3 1 #")"
0 0 57 29 1 #"\n"
0 0 57 3 38 #"                                      "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 57 3 1 #" "
0 0 14 3 3 #"amt"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"account-balance"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 57 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 22 3 5 #"))))]"
0 0 57 29 1 #"\n"
0 0 57 3 15 #"               "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"deposit2"
0 0 57 3 1 #" "
0 0 14 3 7 #"acctnum"
0 0 57 3 1 #" "
0 0 14 3 3 #"amt"
0 0 57 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"rest"
0 0 57 3 1 #" "
0 0 14 3 4 #"aloa"
0 0 22 3 7 #"))])]))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 54 #";; racket doesn't give void when we use set-structure!"
0           0
