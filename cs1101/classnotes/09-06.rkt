#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 70 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 39 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 41 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 391 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 172
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname 09-06) (r"
 #"ead-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t construct"
 #"or repeating-decimal #f #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 17 3 20 #";; a boa is a struct"
0 0 54 29 1 #"\n"
0 0 17 3 34 #";; (make-boa string number string)"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 55 3 1 #" "
0 0 14 3 3 #"boa"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"name"
0 0 55 3 1 #" "
0 0 14 3 6 #"length"
0 0 55 3 1 #" "
0 0 14 3 4 #"food"
0 0 22 3 2 #"))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 22 #";; a dillo is a struct"
0 0 54 29 1 #"\n"
0 0 17 3 30 #";; (make-dillo number boolean)"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 55 3 1 #" "
0 0 14 3 5 #"dillo"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 55 3 1 #" "
0 0 14 3 5 #"dead?"
0 0 22 3 2 #"))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 22 #";; a tiger is a struct"
0 0 54 29 1 #"\n"
0 0 17 3 37 #";; (make-tiger string number product)"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 55 3 1 #" "
0 0 14 3 5 #"tiger"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"name"
0 0 55 3 1 #" "
0 0 14 3 6 #"length"
0 0 55 3 1 #" "
0 0 14 3 5 #"sells"
0 0 22 3 2 #"))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 24 #";; a product is a struct"
0 0 54 29 1 #"\n"
0 0 17 3 31 #";; (make-product string string)"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 55 3 1 #" "
0 0 14 3 7 #"product"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"item"
0 0 55 3 1 #" "
0 0 14 3 7 #"company"
0 0 22 3 2 #"))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 74
(
 #";; an animal is one of                                   (DATA DEFIN"
 #"ITION)"
) 0 0 54 29 1 #"\n"
0 0 17 3 7 #";; -boa"
0 0 54 29 1 #"\n"
0 0 17 3 9 #";; -dillo"
0 0 54 29 1 #"\n"
0 0 17 3 9 #";; -tiger"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 54 3 1 #" "
0 0 17 3 72
(
 #";; boa? -> recogniser, Racket creates automatically on defining a st"
 #"ruct"
) 0 0 54 29 1 #"\n"
0 0 17 3 28 #";; boa?: anything -> boolean"
0 0 54 29 1 #"\n"
0 0 17 3 77
(
 #";; consumes anything and produces true if that data is a boa, false "
 #"otherwise"
) 0 0 54 29 1 #"\n"
0 0 17 3 39 #";; tiger?, dillo?, product? - ALL EXIST"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 39 #";; fits-cage?: animal number -> boolean"
0 0 54 29 1 #"\n"
0 0 17 3 64
#";; consumes an animal and the length of a cage and produces true"
0 0 54 29 1 #"\n"
0 0 17 3 76
(
 #";; if the length of the animal is less than the cage length, false o"
 #"therwise"
) 0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"fits-cage?"
0 0 55 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 55 3 1 #" "
0 0 14 3 11 #"cage-length"
0 0 22 3 1 #")"
0 0 55 29 1 #"\n"
0 0 55 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 55 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 4 #"boa?"
0 0 55 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"boa-length"
0 0 55 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 14 3 11 #"cage-length"
0 0 22 3 2 #")]"
0 0 55 29 1 #"\n"
0 0 55 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 6 #"dillo?"
0 0 55 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"dillo-length"
0 0 55 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 14 3 11 #"cage-length"
0 0 22 3 2 #")]"
0 0 55 29 1 #"\n"
0 0 55 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 6 #"tiger?"
0 0 55 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"tiger-length"
0 0 55 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 14 3 11 #"cage-length"
0 0 22 3 4 #")]))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 13 #";; test-cases"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"fits-cage?"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-boa"
0 0 55 3 1 #" "
0 0 19 3 7 #"\"Sally\""
0 0 55 3 1 #" "
0 0 20 3 2 #"12"
0 0 55 3 1 #" "
0 0 19 3 7 #"\"candy\""
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 20 3 1 #"7"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 69 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"fits-cage?"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-dillo"
0 0 55 3 1 #" "
0 0 20 3 1 #"4"
0 0 55 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 69 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"fits-cage?"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-tiger"
0 0 55 3 1 #" "
0 0 19 3 7 #"\"kevin\""
0 0 55 3 1 #" "
0 0 20 3 2 #"40"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-product"
0 0 55 3 1 #" "
0 0 19 3 6 #"\"toys\""
0 0 55 3 1 #" "
0 0 19 3 8 #"\"Hasbro\""
0 0 22 3 2 #"))"
0 0 55 3 1 #" "
0 0 20 3 2 #"50"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 68 29 1 #"\n"
0 0 17 3 93
(
 #";; total of 9 test cases - greater than cage, less than cage, equal "
 #"to cage for all 3 animals"
) 0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 38 #";; TEMPLATE for functions over animals"
0 0 54 29 1 #"\n"
0 7         667 54           0 0           0 110 0 17 3 33
#";; animal-func: animal ... -> ..."
0 0 2 29 1 #"\n"
0 0 17 3 6 #";; ..."
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"animal-func"
0 0 2 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 2 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 4 #"boa?"
0 0 2 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 8 #"boa-name"
0 0 2 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 2 29 1 #"\n"
0 0 2 3 23 #"                       "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 10 #"boa-length"
0 0 2 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 2 29 1 #"\n"
0 0 2 3 23 #"                       "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 8 #"boa-food"
0 0 2 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 2 29 1 #"\n"
0 0 2 3 9 #"         "
0 0 22 3 2 #"[("
0 0 14 3 6 #"dillo?"
0 0 2 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 12 #"dillo-length"
0 0 2 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 2 29 1 #"\n"
0 0 2 3 26 #"                          "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 11 #"dillo-dead?"
0 0 2 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 2 29 1 #"\n"
0 0 2 3 9 #"         "
0 0 22 3 2 #"[("
0 0 14 3 6 #"tiger?"
0 0 2 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 10 #"tiger-name"
0 0 2 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 2 29 1 #"\n"
0 0 2 3 26 #"                          "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 12 #"tiger-length"
0 0 2 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 2 29 1 #"\n"
0 0 2 3 26 #"                          "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 11 #"tiger-sells"
0 0 2 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 3 3 #"]))"
0           0 0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 44 #";; has-given-name?: animal string -> boolean"
0 0 54 29 1 #"\n"
0 0 17 3 72
(
 #";; consumes an animal and a name and produces true if the animal has"
 #" the"
) 0 0 54 29 1 #"\n"
0 0 17 3 39 #";; given name, produces false otherwise"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"has-given-name?"
0 0 55 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 55 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #")"
0 0 55 29 1 #"\n"
0 0 55 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 55 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 4 #"boa?"
0 0 55 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 55 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 8 #"string=?"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"boa-name"
0 0 55 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 55 29 1 #"\n"
0 0 55 3 29 #"                             "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 55 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 3 #"])]"
0 0 55 29 1 #"\n"
0 0 55 3 9 #"         "
0 0 22 3 2 #"[("
0 0 14 3 6 #"dillo?"
0 0 55 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 55 29 1 #"\n"
0 0 55 3 9 #"         "
0 0 22 3 2 #"[("
0 0 14 3 6 #"tiger?"
0 0 58 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 58 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 8 #"string=?"
0 0 58 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"tiger-name"
0 0 58 3 1 #" "
0 0 14 3 6 #"an-ani"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #")"
0 0 58 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #"]"
0 0 58 29 1 #"\n"
0 0 58 3 32 #"                                "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 58 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 5 #"])]))"
0 0 54 29 1 #"\n"
0 0 54 29 1 #"\n"
0 0 17 3 8 #";; tests"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"has-given-name?"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-boa"
0 0 55 3 1 #" "
0 0 19 3 6 #"\"Slim\""
0 0 55 3 1 #" "
0 0 20 3 2 #"12"
0 0 55 3 1 #" "
0 0 19 3 7 #"\"frogs\""
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 19 3 6 #"\"Stan\""
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 54 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"has-given-name?"
0 0 55 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-dillo"
0 0 55 3 1 #" "
0 0 20 3 1 #"4"
0 0 55 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 19 3 7 #"\"Kelly\""
0 0 22 3 1 #")"
0 0 55 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 68 29 1 #"\n"
0 0 68 29 1 #"\n"
0           0
