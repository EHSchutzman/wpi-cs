#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.1.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
          0 0 63 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 39 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 41 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1           0 705 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 193
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname |09-20 le"
 #"cture 15 - trees|) (read-case-sensitive #t) (teachpacks ()) (htdp-se"
 #"ttings #(#t constructor repeating-decimal #f #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 7         127 4           0 0           0 20 0 17 3 21
#";; person is a struct"
0 0 2 29 1 #"\n"
0 0 17 3 51 #";; (make-person string number symbol person person)"
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 2 3 1 #" "
0 0 14 3 6 #"person"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"name"
0 0 2 3 1 #" "
0 0 14 3 4 #"year"
0 0 2 3 1 #" "
0 0 14 3 3 #"eye"
0 0 2 3 1 #" "
0 0 14 3 6 #"mother"
0 0 2 3 1 #" "
0 0 14 3 6 #"father"
0 0 22 3 2 #"))"
0           0 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 9 #";;Let\342\200\231s"
0 0 17 3 1 #" "
0 0 17 3 2 #"go"
0 0 17 3 15 #" back to lists:"
0 0 4 29 1 #"\n"
0 0 17 3 29 #";; a list-of-number is one of"
0 0 4 29 1 #"\n"
0 0 17 3 61
(
 #";; empty (was a way to say there\342\200\231s no more data to proces"
 #"s)"
) 0 0 4 29 1 #"\n"
0 0 17 3 31 #";; (cons number list-of-number)"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 41 #";; a family tree node (ftnode) is one of "
0 0 4 29 1 #"\n"
0 0 17 3 28 #";; 'unknown (symbol unknown)"
0 0 4 29 1 #"\n"
0 0 17 3 51 #";; (make-person string number symbol ftnode ftnode)"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 4 3 1 #" "
0 0 14 3 6 #"person"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 4 #"year"
0 0 4 3 1 #" "
0 0 14 3 3 #"eye"
0 0 4 3 1 #" "
0 0 14 3 6 #"mother"
0 0 4 3 1 #" "
0 0 14 3 6 #"father"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 44 #";; example (start at root of the tree, Mary)"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 8 #"MaryTree"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 0 22 3 1 #"("
0 0 14 3 11 #"make-person"
0 0 4 3 1 #" "
0 0 19 3 6 #"\"Mary\""
0 0 4 3 1 #" "
0 0 20 3 4 #"1980"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 22 3 1 #"("
0 0 14 3 11 #"make-person"
0 0 4 3 1 #" "
0 0 19 3 5 #"\"Ann\""
0 0 4 3 1 #" "
0 0 20 3 4 #"1960"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"unknown"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 22 3 1 #"("
0 0 14 3 11 #"make-person"
0 0 4 3 1 #" "
0 0 19 3 6 #"\"Fred\""
0 0 4 3 1 #" "
0 0 20 3 4 #"1936"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"unknown"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"unknown"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 22 3 1 #"("
0 0 14 3 11 #"make-person"
0 0 4 3 1 #" "
0 0 19 3 5 #"\"Joe\""
0 0 4 3 1 #" "
0 0 20 3 4 #"1960"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"unknown"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"unknown"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 7         505 4           0 0           0 83 0 17 3 25
#";ftfcn: ftnode ... -> ..."
0 0 2 29 1 #"\n"
0 0 17 3 5 #"; \342\200\246"
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 2 #"de"
0 0 15 3 5 #"fine "
0 0 22 3 1 #"("
0 0 14 3 5 #"ftfcn"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 2 3 1 #" "
0 0 14 3 3 #"\342\200\246"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 1 2 65 1 #"\t"
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 2 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 7 #"symbol?"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 2 3 12 #"            "
0 0 22 3 1 #"]"
0 1 2 65 1 #"\t"
0 0 2 29 1 #"\n"
0 0 2 3 14 #"              "
0 0 22 3 2 #"[("
0 0 14 3 7 #"person?"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 11 #"person-name"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 11 #"person-year"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 10 #"person-eye"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 5 #"ftfcn"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"person-mother"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 14 3 3 #"\342\200\246"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 15 #"               "
0 0 22 3 1 #"("
0 0 14 3 5 #"ftfcn"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"person-father"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 14 3 3 #"\342\200\246"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 3 #"]))"
0 0 2 29 1 #"\n"
0           0 0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 109
(
 #";; ----------------------UP TO HERE IS IN MS WORD NOTES-------------"
 #"---------------------------------------;;"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 17 3 38 #";; in-family? string ftnode -> boolean"
0 0 4 29 1 #"\n"
0 0 17 3 120
(
 #";; consumes the name of a person and a family tree node and produces"
 #" true if the named person is in the tree, else false"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"in-family?"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 7 #"symbol?"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 1 4 65 1 #"\t"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 0 4 3 9 #"         "
0 0 22 3 2 #"[("
0 0 14 3 7 #"person?"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"string=?"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"person-name"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 17 3 42 #";; to see if given name is in root of tree"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 22 3 1 #"("
0 0 14 3 10 #"in-family?"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"person-mother"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 17 3 95
(
 #";; will give back true if anyone on Mary's mother's side of the name"
 #" matches the name you input"
) 0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 22 3 1 #"("
0 0 14 3 10 #"in-family?"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"person-father"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 17 3 95
(
 #";; will give back true if anyone on Mary's father's side of the name"
 #" matches the name you input"
) 0 0 4 29 1 #"\n"
0 0 4 3 24 #"                        "
0 0 22 3 4 #")]))"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 7         217 4           0 0           0 35 0 2 3 2 #"  "
0 0 17 3 48 #";;1. Change name of function ftfcn to in-family?"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 17 3 33 #";;2. Write \"name\" in place of ..."
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 17 3 30 #";;3. Write \"false\" for unknown"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 17 3 103
(
 #";;4. Take out extra ...'s after \"(in-family? (person-mother aft)\" "
 #"and \"(in-family? (person-father aft)\""
) 0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 17 3 60
#";;5. Take out year and eye color because you don't need them"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 17 3 127
(
 #";;6. What are you doing with person-name? Trying to see if it matche"
 #"s the name you input (variable called name). Write this in."
) 0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 17 3 151
(
 #";;7. Change \"(in-family? (person-mother aft))\" to \"(in-family? na"
 #"me (person-mother aft))\" because the function is going to try to ma"
 #"tch the input name "
) 0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 17 3 65
#";;      with a name on mother's side. Do same with father's side."
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 17 3 150
(
 #";;8. Add in \"or\" because you want true if the first name is the na"
 #"me you input, or if it's on Mary's mother's side, or if it's on Mary"
 #"'s father's side"
) 0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 17 3 164
(
 #";;      Or gives true if one of the expressions is true. Or works on"
 #" three separate boolean expressions, (string=? name (person-name aft"
 #")) or the two in-family?'s. "
) 0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 17 3 159
(
 #";;      Will return true for first one if the root person of the tre"
 #"e matches. Second part will give true if anyone in Mary's mother's s"
 #"ide of the family is a "
) 0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 17 3 81
(
 #";;      match. Third will give true if anyone in Mary's father's sid"
 #"e is a match."
) 0           0 0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 17 3 8 #";; tests"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"in-family?"
0 0 4 3 1 #" "
0 0 19 3 7 #"\"Keith\""
0 0 4 3 1 #" "
0 0 14 3 8 #"MaryTree"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"in-family?"
0 0 4 3 1 #" "
0 0 19 3 6 #"\"Fred\""
0 0 4 3 1 #" "
0 0 14 3 8 #"MaryTree"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"in-family?"
0 0 4 3 1 #" "
0 0 19 3 6 #"\"Fred\""
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"unknown"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 17 3 48 #";;need an empty (unknown in this case) test case"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 17 #";; In-class work:"
0 0 4 29 1 #"\n"
0 0 17 3 31 #";; count-gens: ftnode -> number"
0 0 4 29 1 #"\n"
0 0 17 3 62
#";; produces the number of generations in the given family tree"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"count-gens"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 7 #"symbol?"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #"]"
0 1 4 65 1 #"\t"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 7 #"person?"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 1 #"("
0 0 14 3 3 #"max"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"count-gens"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"person-mother"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 28 #"                            "
0 0 22 3 1 #"("
0 0 14 3 10 #"count-gens"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"person-father"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 23 #"                       "
0 0 22 3 4 #")]))"
0 0 4 29 1 #"\n"
0 7          97 4           0 0           0 15 0 17 3 57
#";; 0 is for no generations represented by an unknown tree"
0 0 2 29 1 #"\n"
0 0 17 3 67
#";; Take out name, year, and eye color because you don't need those."
0 0 2 29 1 #"\n"
0 0 17 3 145
(
 #";; \"(count-gens (person-mother aft))\" will return a number, and it"
 #" will give the number of generations in the person's mother's side o"
 #"f the tree."
) 0 0 2 29 1 #"\n"
0 0 17 3 145
(
 #";; \"(count-gens (person-father aft))\" will return a number, and it"
 #" will give the number of generations in the person's father's side o"
 #"f the tree."
) 0 0 2 29 1 #"\n"
0 0 17 3 68
(
 #";; The first \"(+ 1\" gives you the number for the root, Mary hersel"
 #"f."
) 0 0 2 29 1 #"\n"
0 0 17 3 63
#";; Then the \"+1\" occurs for each new generation that's counted."
0 0 2 29 1 #"\n"
0 0 17 3 95
(
 #";;What \"max\" does is it checks to see which side of the tree is lo"
 #"nger, either Ann's or Joe's. "
) 0 0 2 29 1 #"\n"
0 0 17 3 92
(
 #";;Ann has another person linked to her and Joe does not, so Joe just"
 #" gets ignored. Poor Joe."
) 0           0 0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 6 #";;test"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"count-gens"
0 0 4 3 1 #" "
0 0 14 3 8 #"MaryTree"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 17 3 60
#";;Three because of Mary, her Mom Ann, and her mom's dad Fred"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"count-gens"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"unknown"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 17 3 23 #";; need an unknown case"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 48 #";; ---------------------------------------------"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 46 #";; update-year: ftnode string number -> ftnode"
0 0 4 29 1 #"\n"
0 0 17 3 79
(
 #";; consumes a family tree, a name, and a new birthyear and produces "
 #"a tree the "
) 0 0 4 29 1 #"\n"
0 0 17 3 7 #";; same"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 8 #"original"
0 0 17 3 1 #" "
0 0 17 3 6 #"except"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"named"
0 0 17 3 1 #" "
0 0 17 3 6 #"person"
0 0 17 3 1 #" "
0 0 17 3 3 #"has"
0 0 17 3 1 #" "
0 0 17 3 44 #"the new birthyear (assumes names are unique)"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"update-year"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 13 #"new-birthyear"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 7 #"symbol?"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"unknown"
0 0 22 3 1 #"]"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 2 #"[("
0 0 14 3 7 #"person?"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 8 #"string=?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"person-name"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-person"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 13 #"new-birthyear"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"person-eye"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"person-mother"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"person-father"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 3 #"))]"
0 0 4 29 1 #"\n"
0 0 4 3 15 #"               "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-person"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"person-name"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"person-year"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"person-eye"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 11 #"update-year"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"pe"
0 0 14 3 2 #"rs"
0 0 14 3 1 #"o"
0 0 14 3 3 #"n-m"
0 0 14 3 1 #"o"
0 0 14 3 4 #"ther"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 13 #"new-birthyear"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 11 #"update-year"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"person-father"
0 0 4 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 13 #"new-birthyear"
0 0 22 3 7 #"))])]))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 7        1153 4           0 0           0 191 0 14 3 11 #"Explanation"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 5 #"code:"
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"update-year"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 2 3 1 #" "
0 0 14 3 4 #"name"
0 0 2 3 1 #" "
0 0 14 3 13 #"new-birthyear"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 7 #"       "
0 0 17 3 29 #";;update-year = function name"
0 0 2 29 1 #"\n"
0 0 2 3 7 #"       "
0 0 17 3 88
(
 #";;aft = \"a family tree,\" which is the name of an already defined t"
 #"hree that you'd put in"
) 0 0 2 29 1 #"\n"
0 0 2 3 7 #"       "
0 0 17 3 45 #";;name = the name you put in to search for it"
0 0 2 29 1 #"\n"
0 0 2 3 7 #"       "
0 0 17 3 58
#";;new-birthyear = the birthyear you want to be the new one"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 2 3 1 #" "
0 0 22 3 2 #"[("
0 0 14 3 7 #"symbol?"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"unknown"
0 0 22 3 1 #"]"
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 17 3 72
(
 #";; if it's a symbol (if it's unknown) then you want it to return unk"
 #"nown"
) 0 0 2 29 1 #"\n"
0 1 2 65 1 #"\t"
0 0 22 3 2 #"[("
0 0 14 3 7 #"person?"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 8 #"        "
0 0 17 3 41 #";; if it's a person, you want to do this:"
0 0 2 29 1 #"\n"
0 1 2 65 1 #"\t"
0 1 2 65 1 #"\t"
0 1 2 65 1 #"\t"
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 24 #"                        "
0 0 17 3 23 #";;need a cond to check!"
0 0 2 29 1 #"\n"
0 0 2 3 26 #"                          "
0 0 22 3 2 #"[("
0 0 14 3 8 #"string=?"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"person-name"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 26 #"                          "
0 0 17 3 87
(
 #";;This says: If the string (name) you input matches person-name of r"
 #"oot person from aft"
) 0 0 2 29 1 #"\n"
0 0 2 3 31 #"                               "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-person"
0 0 2 3 1 #" "
0 0 14 3 4 #"name"
0 0 2 3 1 #" "
0 0 14 3 13 #"new-birthyear"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"person-eye"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"person-mother"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"person-father"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 3 #"))]"
0 0 2 29 1 #"\n"
0 0 2 3 31 #"                               "
0 0 17 3 80
(
 #";; Then you want to make a person with the new name (which is the ol"
 #"d name too),"
) 0 0 2 29 1 #"\n"
0 0 2 3 31 #"                               "
0 0 17 3 92
(
 #";; the new-birthyear you're puttting in, then the person's old eye c"
 #"olor, mother, and father"
) 0 0 2 29 1 #"\n"
0 0 2 3 30 #"                              "
0 0 22 3 1 #"["
0 0 14 3 4 #"else"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 31 #"                               "
0 0 17 3 25 #";; If there isn't a match"
0 0 2 29 1 #"\n"
0 0 2 3 31 #"                               "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-person"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 31 #"                               "
0 0 17 3 90
(
 #";; Answer must be an ftnode, which can be 'unknown or a person. You "
 #"want to make a person!"
) 0 0 2 29 1 #"\n"
0 0 2 3 36 #"                                    "
0 0 22 3 1 #"("
0 0 14 3 11 #"person-name"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"person-year"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"person-eye"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 36 #"                                    "
0 0 17 3 52 #";; Person will hae old name, old year, old eye color"
0 0 2 29 1 #"\n"
0 0 2 3 44 #"                                            "
0 0 22 3 1 #"("
0 0 14 3 11 #"update-year"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"person-mother"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 4 #"name"
0 0 2 3 1 #" "
0 0 14 3 13 #"new-birthyear"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 44 #"                                            "
0 0 17 3 64
#";; Function update-year will run on the new make-person's mother"
0 0 2 29 1 #"\n"
0 0 2 3 44 #"                                            "
0 0 22 3 1 #"("
0 0 14 3 11 #"update-year"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"person-father"
0 0 2 3 1 #" "
0 0 14 3 3 #"aft"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 4 #"name"
0 0 2 3 1 #" "
0 0 14 3 13 #"new-birthyear"
0 0 22 3 7 #"))])]))"
0 0 2 29 1 #"\n"
0 0 2 3 44 #"                                            "
0 0 17 3 68
#";; Function update-year will run on the new make-person's father too"
0           0 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 7 #";; test"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"update-year"
0 0 4 3 1 #" "
0 0 14 3 8 #"MaryTree"
0 0 4 3 1 #" "
0 0 19 3 6 #"\"Fred\""
0 0 4 3 1 #" "
0 0 20 3 4 #"1932"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 17 3 37 #";; family tree gives back one of two:"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 17 3 41 #";; a family tree node (ftnode) is one of "
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 17 3 28 #";; 'unknown (symbol unknown)"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 17 3 51 #";; (make-person string number symbol ftnode ftnode)"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 1 #"("
0 0 14 3 11 #"make-person"
0 0 4 3 1 #" "
0 0 19 3 6 #"\"Mary\""
0 0 4 3 1 #" "
0 0 20 3 4 #"1980"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 22 3 1 #"("
0 0 14 3 11 #"make-person"
0 0 4 3 1 #" "
0 0 19 3 5 #"\"Ann\""
0 0 4 3 1 #" "
0 0 20 3 4 #"1960"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"unknown"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 22 3 1 #"("
0 0 14 3 11 #"make-person"
0 0 4 3 1 #" "
0 0 19 3 6 #"\"Fred\""
0 0 4 3 1 #" "
0 0 20 3 4 #"1932"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"unknown"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"unknown"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 22 3 1 #"("
0 0 14 3 11 #"make-person"
0 0 4 3 1 #" "
0 0 19 3 5 #"\"Joe\""
0 0 4 3 1 #" "
0 0 20 3 4 #"1960"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"unknown"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"unknown"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"update-year"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"unknown"
0 0 4 3 1 #" "
0 0 19 3 5 #"\"Ann\""
0 0 4 3 1 #" "
0 0 20 3 4 #"1961"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"unknown"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 7         115 4           0 0           0 18 0 2 29 1 #"\n"
0 0 17 3 33 #";; SHORTHAND WAY FOR WRITING CONS"
0 0 2 29 1 #"\n"
0 0 17 3 66
(
 #";;\"(list 7 3 9)\" is the same as \"(cons 7 (cons 3 (cons 9 empty)))"
 #"\""
) 0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 17 3 20 #";; Contract for cons"
0 0 2 29 1 #"\n"
0 0 17 3 42 #";; cons: item list-of-item -> list-of-item"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 17 3 20 #";; Contract for list"
0 0 2 29 1 #"\n"
0 0 17 3 43 #";; list: item item ... item -> list-of-item"
0 0 2 29 1 #"\n"
0 0 2 3 9 #"         "
0 0 17 3 19 #";; a bunch of items"
0 0 2 29 1 #"\n"
0           0 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0           0
